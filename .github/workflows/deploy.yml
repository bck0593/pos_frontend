# .github/workflows/deploy.yml
name: Deploy Frontend to Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-frontend-azure
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_WEBAPP_NAME: app-002-gen10-step3-1-node-oshima29
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: "1"
      NEXT_DISABLE_ESLINT_PLUGIN: "true"
      NEXT_PUBLIC_BACKEND_URL: https://app-002-gen10-step3-1-py-oshima29.azurewebsites.net
      NEXT_PUBLIC_API_BASE: https://app-002-gen10-step3-1-py-oshima29.azurewebsites.net
      NEXT_PUBLIC_API_BASE_URL: https://app-002-gen10-step3-1-py-oshima29.azurewebsites.net

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      # devDependencies を含めてインストール
      - name: Install deps
        env:
          NODE_ENV: ""
        run: |
          npm config set ignore-scripts false
          npm ci --include=dev

      # 念のため明示的にパッチを適用
      - name: Apply patches
        run: npx patch-package || true

      - name: Build (Next.js standalone)
        run: |
          npm run build --no-lint
          ls -la .next || true

      - name: Prepare artifact
        run: |
          rm -rf out && mkdir -p out
          cp -a .next/standalone/. out/
          mkdir -p out/.next
          cp -a .next/static out/.next/static
          cp -a .next/*.json out/.next/ 2>/dev/null || true
          cp .next/BUILD_ID out/.next/BUILD_ID
          if [ -d ".next/server" ]; then
            mkdir -p out/server
            cp -a .next/server/. out/server/
          fi
          if [ -d public ]; then cp -a public out/public; fi
          node -e "const fs=require('fs');fs.writeFileSync('out/package.json', JSON.stringify({
            name:'next-standalone',
            version:'0.0.0',
            private:true,
            type:'commonjs',
            main:'server.js',
            scripts:{ start:'HOST=0.0.0.0 PORT=${PORT:-8080} node server.js' }
          },null,2));"

      - name: Zip artifact
        run: |
          cd out
          zip -r ../site.zip .
          cd ..

      - name: Deploy via Kudu ZIP Deploy
        env:
          PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          APP_NAME: ${{ env.AZURE_WEBAPP_NAME }}
        run: |
          USER=$(echo "$PUBLISH_PROFILE" | grep -oP 'userName="\\K[^"]+')
          PASS=$(echo "$PUBLISH_PROFILE" | grep -oP 'userPWD="\\K[^"]+')
          curl -sS -u "$USER:$PASS" \
            -X POST "https://${APP_NAME}.scm.azurewebsites.net/api/zipdeploy?isAsync=false" \
            --data-binary @site.zip

      - name: Warmup
        run: |
          URL="https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          for i in {1..30}; do
            code=$(curl -s -o /dev/null -w '%{http_code}' "$URL")
            echo "Try $i: $code"
            [ "$code" = "200" ] && exit 0
            sleep 5
          done
          exit 1