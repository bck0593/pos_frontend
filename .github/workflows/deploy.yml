# .github/workflows/deploy.yml
name: Deploy Frontend to Azure Web App

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/deploy.yml"
      - "**/*"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_WEBAPP_NAME: app-002-gen10-step3-1-node-oshima29
      NEXT_TELEMETRY_DISABLED: "1"
      # ESLint プラグインが無くても落ちないように
      NEXT_DISABLE_ESLINT_PLUGIN: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          # ルート直下の lock をキャッシュ
          cache-dependency-path: |
            package-lock.json
            npm-shrinkwrap.json

      - name: Install deps & build (Next standalone)
        run: |
          npm ci
          # Lint をスキップ（型は next.config で無視していない限りチェックされます）
          npm run build --no-lint
          echo "=== list .next ==="
          ls -la .next || true
          echo "=== list .next/standalone ==="
          ls -la .next/standalone || true

      - name: Prepare artifact
        run: |
          if [ ! -d ".next/standalone" ]; then
            echo "::error ::.next/standalone not found. Ensure next.config.* has: module.exports = { output: 'standalone' }"
            exit 1
          fi

          rm -rf out && mkdir -p out/.next
          # .next/standalone には server.js と必要な node_modules が入る
          cp -r .next/standalone/* out/
          # 静的ファイル
          cp -r .next/static out/.next/static
          # public があれば同梱
          if [ -d public ]; then cp -r public out/public; fi
          # start スクリプトを明示
          node -e "let p=require('./package.json');p.scripts=p.scripts||{};p.scripts.start='node server.js';require('fs').writeFileSync('out/package.json',JSON.stringify(p,null,2))"

          # --- Windows App Service 用 web.config（iisnode -> server.js） ---
          cat > out/web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="DynamicContent" stopProcessing="true">
                    <match url=".*" />
                    <action type="Rewrite" url="server.js" />
                  </rule>
                </rules>
              </rewrite>
              <staticContent>
                <remove fileExtension=".json" />
                <mimeMap fileExtension=".json" mimeType="application/json" />
              </staticContent>
            </system.webServer>
          </configuration>
          EOF

          echo "=== out tree ==="
          ls -la out
          test -f out/server.js || (echo '::error ::server.js missing in out/' && exit 1)
          test -f out/web.config || (echo '::error ::web.config missing in out/' && exit 1)

      - name: Wait a bit (avoid SCM restart race)
        run: sleep 20

      - name: Deploy to Azure Web App (artifact only)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: out
          # Windows + publish-profile では startup-command は使えないので未指定
