# .github/workflows/deploy.yml
name: Deploy Frontend to Azure Web App

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/deploy.yml"
      - "**/*"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_WEBAPP_NAME: app-002-gen10-step3-1-node-oshima29
      NEXT_TELEMETRY_DISABLED: "1"
      NEXT_DISABLE_ESLINT_PLUGIN: "true"
      NEXT_PUBLIC_BACKEND_URL: https://app-002-gen10-step3-1-py-oshima29.azurewebsites.net
      NEXT_PUBLIC_API_BASE: https://app-002-gen10-step3-1-py-oshima29.azurewebsites.net
      NEXT_PUBLIC_API_BASE_URL: https://app-002-gen10-step3-1-py-oshima29.azurewebsites.net

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sanity check repo root
        run: |
          echo "repo root:"; pwd; ls -la
          test -f package.json || (echo "::error ::package.json not found at repo root"; exit 1)

      # lock があればキャッシュ、無ければ通常セットアップ
      - name: Setup Node (with cache)
        if: ${{ hashFiles('package-lock.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Setup Node (no cache fallback)
        if: ${{ hashFiles('package-lock.json') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install & Build
        run: |
          npm ci
          npm run build --no-lint
          echo "=== list .next ==="; ls -la .next || true
          echo "=== list .next/standalone ==="; ls -la .next/standalone || true
          echo "=== sanity check: backend URL embedded ==="
          (grep -R "app-002-gen10-step3-1-py-oshima29" -n .next || (echo "::error ::Backend URL not found in client bundle"; exit 1))

      - name: Prepare artifact
        run: |
          rm -rf out && mkdir -p out/.next
          cp -r .next/standalone/* out/
          cp -r .next/static out/.next/static
          if [ -d public ]; then cp -r public out/public; fi
          node -e "const fs=require('fs');const pkg=JSON.parse(fs.readFileSync('package.json','utf8'));pkg.scripts=pkg.scripts||{};pkg.scripts.start='node server.js';fs.writeFileSync('out/package.json',JSON.stringify(pkg,null,2));"
          echo "=== out tree ==="; ls -la out

      - name: Sleep (avoid SCM race)
        run: sleep 10

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./out
